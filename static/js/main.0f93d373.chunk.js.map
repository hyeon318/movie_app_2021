{"version":3,"sources":["movies.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","console","log","this","movie","id","medium_cover_image","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oSA6BeA,MAzBf,YAAmD,IAAnCC,EAAkC,EAAlCA,KAAKC,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OACxC,OACA,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,oBAAII,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SAA+BD,EAAOI,KACpC,SAACC,EAAOC,GAAR,OACE,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QAEb,oBAAGL,UAAU,kBAAb,UAAgCH,EAAQS,MAAM,EAAE,KAAhD,aC8CWC,E,4MAtDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAC2BC,IAAMC,IAAI,yDADrC,gBACSJ,EADT,EACHK,KAAMA,KAAML,OAGnB,EAAKM,SAAS,CAACN,SAAQD,WAAU,IAEjCQ,QAAQC,IAAIR,GANF,2C,4KAgBVS,KAAKR,Y,qIAIE,IAAD,EACwBQ,KAAKX,MAA3BC,EADF,EACEA,UAAYC,EADd,EACcA,OACpB,OACA,yBAASV,UAAU,YAAnB,SACE,8BACGS,EACD,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,yBAGA,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAiB,GAAK,OACjB,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACV1B,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAME,mBACdvB,OAAQqB,EAAMrB,QANTqB,EAAMC,iB,GAtCPE,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,WAM1BZ,M","file":"static/js/main.0f93d373.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./App.css\";\r\n\r\nfunction Movie({year,title,summary,poster,genres}){\r\n  return (\r\n  <div className=\"movie\">\r\n    <img src={poster} alt={title} title={title}/>\r\n    <h3 className=\"movie__title\">{title}</h3>\r\n    <h5 className=\"movie__year\">{year}</h5>\r\n    <ul className=\"movie__genres\">{genres.map(\r\n      (genre, index)=>\r\n        <li key={index} className=\"genres__genre\">{genre}</li>)}\r\n    </ul>\r\n    <p className=\"movie__summnary\">{summary.slice(0,180)}...</p>\r\n    </div>\r\n  )\r\n}\r\n// map function parameter -> item , item number (key)\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year:PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired ,\r\n  genres:PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;\r\n\r\n//  done 4.3 adding genres ","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"./movies\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component{\r\n  state = {\r\n    isLoading: true,\r\n    movies: []\r\n  };\r\n  getMovies = async() => {\r\n    const {data:{data:{movies}}} = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\r\n    // this.setState({movies:movies})\r\n    // ->\r\n    this.setState({movies, isLoading:false});\r\n    // movies = movies.data.data.movies -> {data:{data:{movies}}} = movies \r\n    console.log(movies);\r\n    // axios : like fetch layer\r\n    // axios is not fast all over time\r\n    // axios gets little time, so we needs async await \r\n}\r\n\r\n  async componentDidMount(){\r\n    // setTimeout(()=>{\r\n    //   this.setState({isLoading:false});\r\n    // }, 6000);\r\n    this.getMovies();\r\n    // render -> componentDidMount\r\n  };\r\n\r\n  render(){\r\n    const { isLoading , movies} = this.state;\r\n    return (\r\n    <section className=\"container\">\r\n      <div>\r\n        {isLoading ? (\r\n        <div className=\"loader\">\r\n          <span className=\"loader__text\">Loading..</span>  \r\n        </div>\r\n        ):(\r\n          <div className=\"movies\">\r\n            {movies.map(movie =>(\r\n            <Movie \r\n              key={movie.id}\r\n              id={movie.id} \r\n              year={movie.year} \r\n              title={movie.title} \r\n              summary={movie.summary} \r\n              poster={movie.medium_cover_image}\r\n              genres={movie.genres}\r\n              /> \r\n          ))}\r\n          </div>\r\n          )}\r\n      </div>\r\n    </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('popoto')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}